name: Deploy Docs
on:
  workflow_dispatch:
    inputs:
      branch:
        description: "Branch to build and deploy documentation from"
        required: true
        default: "main"
permissions:
  contents: write
jobs:
  deploy:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v4
        name: Checkout the current repository
      
      - name: Configure Git Credentials
        run: |
          git config user.name github-actions[bot]
          git config user.email 41898282+github-actions[bot]@users.noreply.github.com
      
      - name: Debug before checkout
        run: |
          echo "Current directory: $(pwd)"
          echo "Contents of current directory:"
          ls -la
      
      - name: Pull docs repository
        uses: actions/checkout@v4
        with:
          repository: papermoonio/tanssi-mkdocs
          path: tanssi-docs
          ref: ${{ inputs.branch }}
          fetch-depth: 0
      
      - name: Debug after checkout
        run: |
          echo "Current directory: $(pwd)"
          echo "Contents of current directory:"
          ls -la
          echo "Contents of tanssi-docs directory:"
          ls -la tanssi-docs || echo "tanssi-docs directory does not exist"
          
      - uses: actions/setup-python@v5
        with:
          python-version: 3.x
      
      - run: echo "cache_id=$(date --utc '+%V')" >> $GITHUB_ENV
      
      - uses: actions/cache@v4
        with:
          key: mkdocs-material-${{ env.cache_id }}
          path: .cache
          restore-keys: |
            mkdocs-material-
      
      - name: Install System Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y python3-dev build-essential
      
      - name: Check for requirements.txt
        run: |
          if [ -f "tanssi-docs/requirements.txt" ]; then
            echo "Found requirements.txt in tanssi-docs directory"
          else
            echo "requirements.txt not found in tanssi-docs directory"
            echo "Contents of tanssi-docs directory:"
            ls -la tanssi-docs
          fi
      
      - name: Install pip requirements
        run: |
          python -m pip install --upgrade pip setuptools 'cython<3.0.0' wheel
          if [ -f "tanssi-docs/requirements.txt" ]; then
            python -m pip install -r tanssi-docs/requirements.txt
          else
            # Install default MkDocs requirements
            python -m pip install mkdocs mkdocs-material
          fi
      
      - name: Check MkDocs configuration
        run: |
          if [ -f "tanssi-docs/mkdocs.yml" ]; then
            echo "Found mkdocs.yml in tanssi-docs directory"
            echo "Contents of mkdocs.yml:"
            cat tanssi-docs/mkdocs.yml
          else
            echo "mkdocs.yml not found in tanssi-docs directory"
          fi
      
      - name: Update image paths in Markdown files
        run: |
          find tanssi-docs -type f -name "*.md" -exec sed -i -e 's|](/|](/tanssi-mkdocs/|g' -e 's|href="/|href="/tanssi-mkdocs/|g' {} \; || echo "No markdown files found"
      
      - name: Deploy Docs
        working-directory: tanssi-docs
        run: |
          if [ -f "mkdocs.yml" ]; then
            # Remove home_url to fix warning
            sed -i '/home_url:/d' mkdocs.yml
            # Fix docs_dir if it's set to tanssi-docs
            sed -i 's/docs_dir: tanssi-docs/docs_dir: ./' mkdocs.yml
            # Run MkDocs
            mkdocs gh-deploy --force --clean
          else
            echo "mkdocs.yml not found, cannot deploy"
            exit 1
          fi
